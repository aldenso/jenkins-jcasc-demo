jenkins:
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "admin"
          password: "admin"
        - id: "dev"
          password: "dev"
  authorizationStrategy:
    globalMatrix:
      permissions:
        - "Job/Build:dev"
        - "Job/Cancel:dev"
        - "Job/Read:dev"
        - "Job/Workspace:dev"
        - "Overall/Administer:admin"
        - "Overall/Read:authenticated"
        - "Run/Replay:dev"
        - "Run/Update:dev"
credentials:
  system:
    domainCredentials:
      - credentials:
          - string:
              scope: GLOBAL
              id: "AZTENANT-DEV"
              secret: "${readFile:/run/secrets/secret_tenant}"
              description: "AZTENANT-DEV"
          - string:
              scope: GLOBAL
              id: "AZSUBSCRIPTION-DEV"
              secret: "${readFile:/run/secrets/secret_subscription}"
              description: "AZSUBSCRIPTION-DEV"
          - string:
              scope: GLOBAL
              id: "AZACCESSKEY-DEV"
              secret: "${readFile:/run/secrets/secret_armaccesskey}"
              description: "AZACCESSKEY-DEV"
          - string:
              scope: GLOBAL
              id: "AZCLIENT-DEV"
              secret: "${readFile:/run/secrets/secret_clientid}"
              description: "AZCLIENT-DEV"
          - file:
              scope: GLOBAL
              id: "AZCERTIFICATE-DEV"
              fileName: "mysecretfile.txt"
              secretBytes: "${readFileBase64:/run/secrets/secret_spcertificatepfx}" # secretBytes requires base64 encoded content
jobs:
  - script: >
      folder("develop") {
          description 'The folder contains all jobs for regular tests'
      }
  - script: >
      pipelineJob("develop/JOB-VM-Genesis") {
          description("JOB-Servers")
          parameters {
            stringParam("PREFIX", "prefix", "your description here")
            choiceParam('SIZE', ['Standard_D2s_v3 (default)', 'Standard_D4s_v3', 'Standard_D8s_v3'])
          }
          definition {
              cpsScm {
                  scm {
                      git {
                          remote {
                              github("aldenso/terraform-pipeline-test", "https")
                              credentials("github-user")
                          }
                          branch("*/main")
                      }
                  }
                  scriptPath("devops/dev/Jenkinsfile-genesis.groovy")
              }
          }
          disabled(false)
      }
  - script: >
      pipelineJob("develop/JOB-VM-Apocalipsis") {
          description("JOB-Servers")
          parameters {
            stringParam("PREFIX", "prefix", "your description here")
            choiceParam('SIZE', ['Standard_D2s_v3 (default)', 'Standard_D4s_v3', 'Standard_D8s_v3'])
          }
          definition {
              cpsScm {
                  scm {
                      git {
                          remote {
                              github("aldenso/terraform-pipeline-test", "https")
                              credentials("github-user")
                          }
                          branch("*/main")
                      }
                  }
                  scriptPath("devops/dev/Jenkinsfile-apocalipsis.groovy")
              }
          }
          disabled(false)
      }